Table: Product

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| product_name  | varchar |
+---------------+---------+
product_id is the primary key for this table.
product_name is the name of the product.
 

Table: Sales

+---------------------+---------+
| Column Name         | Type    |
+---------------------+---------+
| product_id          | int     |
| period_start        | varchar |
| period_end          | date    |
| average_daily_sales | int     |
+---------------------+---------+
product_id is the primary key for this table. 
period_start and period_end indicates the start and end date for sales period, both dates are inclusive.
The average_daily_sales column holds the average daily sales amount of the items for the period.

Write an SQL query to report the Total sales amount of each item for each year, with corresponding product name, product_id, product_name and report_year.

Dates of the sales years are between 2018 to 2020. Return the result table ordered by product_id and report_year.

The query result format is in the following example:

Product table:
+------------+--------------+
| product_id | product_name |
+------------+--------------+
| 1          | LC Phone     |
| 2          | LC T-Shirt   |
| 3          | LC Keychain  |
+------------+--------------+

Sales table:
+------------+--------------+-------------+---------------------+
| product_id | period_start | period_end  | average_daily_sales |
+------------+--------------+-------------+---------------------+
| 1          | 2019-01-25   | 2019-02-28  | 100                 |
| 2          | 2018-12-01   | 2020-01-01  | 10                  |
| 3          | 2019-12-01   | 2020-01-31  | 1                   |
+------------+--------------+-------------+---------------------+

Result table:
+------------+--------------+-------------+--------------+
| product_id | product_name | report_year | total_amount |
+------------+--------------+-------------+--------------+
| 1          | LC Phone     |    2019     | 3500         |
| 2          | LC T-Shirt   |    2018     | 310          |
| 2          | LC T-Shirt   |    2019     | 3650         |
| 2          | LC T-Shirt   |    2020     | 10           |
| 3          | LC Keychain  |    2019     | 31           |
| 3          | LC Keychain  |    2020     | 31           |
+------------+--------------+-------------+--------------+


Solution:

SELECT  t1.product_id,
        product_name,
        report_year,
        total_amount
FROM
(
SELECT product_id, '2020' AS report_year,
(DATEDIFF(IF(period_end<'2020-12-31',period_end,'2020-12-31'),
IF(period_start>'2019-12-31',period_start,'2020-01-01'))+1)*average_daily_sales AS total_amount
FROM sales
UNION
SELECT product_id, '2019' AS report_year,
(DATEDIFF(IF(period_end<'2019-12-31',period_end,'2019-12-31'),
IF(period_start>'2018-12-31',period_start,'2019-01-01'))+1)*average_daily_sales AS total_amount
FROM sales
UNION 
SELECT product_id, '2018' AS report_year,
(DATEDIFF(IF(period_end<'2018-12-31',period_end,'2018-12-31'),
IF(period_start>'2017-12-31',period_start,'2018-01-01'))+1)*average_daily_sales AS total_amount
FROM sales
) t1 RIGHT JOIN Product p 
ON t1.product_id = p.product_id
GROUP BY 1,3;
HAVING total_amount > 0
ORDER BY 1,3
