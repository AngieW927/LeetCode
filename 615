Given two tables as below, write a query to display the comparison result (higher/lower/same) of the average salary of employees in a department to the company's average salary.
 

Table: salary
| id | employee_id | amount | pay_date   |
|----|-------------|--------|------------|
| 1  | 1           | 9000   | 2017-03-31 |
| 2  | 2           | 6000   | 2017-03-31 |
| 3  | 3           | 10000  | 2017-03-31 |
| 4  | 1           | 7000   | 2017-02-28 |
| 5  | 2           | 6000   | 2017-02-28 |
| 6  | 3           | 8000   | 2017-02-28 |
 

The employee_id column refers to the employee_id in the following table employee.
 

| employee_id | department_id |
|-------------|---------------|
| 1           | 1             |
| 2           | 2             |
| 3           | 2             |
 

So for the sample data above, the result is:
 

| pay_month | department_id | comparison  |
|-----------|---------------|-------------|
| 2017-03   | 1             | higher      |
| 2017-03   | 2             | lower       |
| 2017-02   | 1             | same        |
| 2017-02   | 2             | same        |

Solution:

SELECT  t1.pay_month,
        t1.department_id,
        CASE WHEN a1>a2 THEN 'higher'
             WHEN a1<a2 THEN 'lower'
             WHEN a1=a2 THEN 'same'
             ELSE NULL END comparison
FROM
(SELECT  DATE_FORMAT(s.pay_date,'%Y-%m') pay_month,
        e.department_id,
        AVG(s.amount) a1
FROM    salary s
LEFT JOIN   employee e
ON      s.employee_id=e.employee_id
GROUP BY    1,2) t1
LEFT JOIN
(SELECT DATE_FORMAT(pay_date,'%Y-%m') pay_month,
        AVG(amount) a2
FROM    salary
GROUP BY 1) t2
ON  t1.pay_month=t2.pay_month;
